name: Continuous-Integration on TX2i

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  setup:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: [self-hosted, ARM64,tx2i]

    steps:
    - uses: actions/checkout@v2.3.1
      with:
        ref: 'main'
        submodules: 'recursive'
        
  configure:
    runs-on: [self-hosted, ARM64,tx2i]
    needs: setup
    steps:
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        #remove the build directory if it exists already
        [ -d ${{github.workspace}}/build ] && rm -rf ${{github.workspace}}/build
        mkdir -p ${{github.workspace}}/build
        cd ${{github.workspace}}/build
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ..

  build:
    runs-on: [self-hosted, ARM64,tx2i]
    needs: configure
    steps:
    - name: Build
      working-directory: ${{github.workspace}}/build
      # Build your program with the given configuration
      run: make 
      
  Test:
    runs-on: [self-hosted, ARM64,tx2i]
    needs: build
    steps:
    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -V -C ${{env.BUILD_TYPE}}
      
