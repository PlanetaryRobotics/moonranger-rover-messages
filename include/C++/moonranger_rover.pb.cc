// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: moonranger_rover.proto

#include "moonranger_rover.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_moonranger_5frover_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_moonranger_5frover_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TranslationPose;
}  // namespace protobuf_moonranger_5frover_2eproto
namespace moonranger_rover {
class GoalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Goal>
      _instance;
} _Goal_default_instance_;
class TranslationPoseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TranslationPose>
      _instance;
} _TranslationPose_default_instance_;
class RotationPoseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RotationPose>
      _instance;
} _RotationPose_default_instance_;
class PoseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pose>
      _instance;
} _Pose_default_instance_;
}  // namespace moonranger_rover
namespace protobuf_moonranger_5frover_2eproto {
static void InitDefaultsGoal() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::moonranger_rover::_Goal_default_instance_;
    new (ptr) ::moonranger_rover::Goal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::moonranger_rover::Goal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Goal =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGoal}, {}};

static void InitDefaultsTranslationPose() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::moonranger_rover::_TranslationPose_default_instance_;
    new (ptr) ::moonranger_rover::TranslationPose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::moonranger_rover::TranslationPose::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TranslationPose =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTranslationPose}, {}};

static void InitDefaultsRotationPose() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::moonranger_rover::_RotationPose_default_instance_;
    new (ptr) ::moonranger_rover::RotationPose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::moonranger_rover::RotationPose::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RotationPose =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRotationPose}, {}};

static void InitDefaultsPose() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::moonranger_rover::_Pose_default_instance_;
    new (ptr) ::moonranger_rover::Pose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::moonranger_rover::Pose::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Pose =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPose}, {
      &protobuf_moonranger_5frover_2eproto::scc_info_TranslationPose.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Goal.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TranslationPose.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RotationPose.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pose.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::Goal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::Goal, x_coordinate_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::Goal, y_coordinate_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::Goal, x_rad_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::Goal, y_rad_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::Goal, orientation_rad_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::TranslationPose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::TranslationPose, x_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::TranslationPose, y_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::TranslationPose, z_m_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::RotationPose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::RotationPose, x_quat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::RotationPose, y_quat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::RotationPose, z_quat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::RotationPose, w_quat_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::Pose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::Pose, timestamp_ns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::Pose, translation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::moonranger_rover::Pose, x_quat_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::moonranger_rover::Goal)},
  { 10, -1, sizeof(::moonranger_rover::TranslationPose)},
  { 18, -1, sizeof(::moonranger_rover::RotationPose)},
  { 27, -1, sizeof(::moonranger_rover::Pose)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::moonranger_rover::_Goal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::moonranger_rover::_TranslationPose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::moonranger_rover::_RotationPose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::moonranger_rover::_Pose_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "moonranger_rover.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026moonranger_rover.proto\022\020moonranger_rov"
      "er\"q\n\004Goal\022\026\n\016x_coordinate_m\030\001 \001(\002\022\026\n\016y_"
      "coordinate_m\030\002 \001(\002\022\017\n\007x_rad_m\030\003 \001(\002\022\017\n\007y"
      "_rad_m\030\004 \001(\002\022\027\n\017orientation_rad\030\005 \001(\002\"8\n"
      "\017TranslationPose\022\013\n\003x_m\030\001 \001(\002\022\013\n\003y_m\030\002 \001"
      "(\002\022\013\n\003z_m\030\003 \001(\002\"N\n\014RotationPose\022\016\n\006x_qua"
      "t\030\001 \001(\002\022\016\n\006y_quat\030\002 \001(\002\022\016\n\006z_quat\030\003 \001(\002\022"
      "\016\n\006w_quat\030\004 \001(\002\"d\n\004Pose\022\024\n\014timestamp_ns\030"
      "\001 \001(\004\0226\n\013translation\030\002 \001(\0132!.moonranger_"
      "rover.TranslationPose\022\016\n\006x_quat\030\005 \001(\002b\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 405);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "moonranger_rover.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_moonranger_5frover_2eproto
namespace moonranger_rover {

// ===================================================================

void Goal::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Goal::kXCoordinateMFieldNumber;
const int Goal::kYCoordinateMFieldNumber;
const int Goal::kXRadMFieldNumber;
const int Goal::kYRadMFieldNumber;
const int Goal::kOrientationRadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Goal::Goal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_moonranger_5frover_2eproto::scc_info_Goal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:moonranger_rover.Goal)
}
Goal::Goal(const Goal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_coordinate_m_, &from.x_coordinate_m_,
    static_cast<size_t>(reinterpret_cast<char*>(&orientation_rad_) -
    reinterpret_cast<char*>(&x_coordinate_m_)) + sizeof(orientation_rad_));
  // @@protoc_insertion_point(copy_constructor:moonranger_rover.Goal)
}

void Goal::SharedCtor() {
  ::memset(&x_coordinate_m_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orientation_rad_) -
      reinterpret_cast<char*>(&x_coordinate_m_)) + sizeof(orientation_rad_));
}

Goal::~Goal() {
  // @@protoc_insertion_point(destructor:moonranger_rover.Goal)
  SharedDtor();
}

void Goal::SharedDtor() {
}

void Goal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Goal::descriptor() {
  ::protobuf_moonranger_5frover_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_moonranger_5frover_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Goal& Goal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_moonranger_5frover_2eproto::scc_info_Goal.base);
  return *internal_default_instance();
}


void Goal::Clear() {
// @@protoc_insertion_point(message_clear_start:moonranger_rover.Goal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_coordinate_m_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orientation_rad_) -
      reinterpret_cast<char*>(&x_coordinate_m_)) + sizeof(orientation_rad_));
  _internal_metadata_.Clear();
}

bool Goal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:moonranger_rover.Goal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x_coordinate_m = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_coordinate_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y_coordinate_m = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_coordinate_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x_rad_m = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_rad_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y_rad_m = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_rad_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float orientation_rad = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &orientation_rad_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:moonranger_rover.Goal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:moonranger_rover.Goal)
  return false;
#undef DO_
}

void Goal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:moonranger_rover.Goal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x_coordinate_m = 1;
  if (this->x_coordinate_m() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x_coordinate_m(), output);
  }

  // float y_coordinate_m = 2;
  if (this->y_coordinate_m() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y_coordinate_m(), output);
  }

  // float x_rad_m = 3;
  if (this->x_rad_m() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->x_rad_m(), output);
  }

  // float y_rad_m = 4;
  if (this->y_rad_m() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->y_rad_m(), output);
  }

  // float orientation_rad = 5;
  if (this->orientation_rad() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->orientation_rad(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:moonranger_rover.Goal)
}

::google::protobuf::uint8* Goal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:moonranger_rover.Goal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x_coordinate_m = 1;
  if (this->x_coordinate_m() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x_coordinate_m(), target);
  }

  // float y_coordinate_m = 2;
  if (this->y_coordinate_m() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y_coordinate_m(), target);
  }

  // float x_rad_m = 3;
  if (this->x_rad_m() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->x_rad_m(), target);
  }

  // float y_rad_m = 4;
  if (this->y_rad_m() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->y_rad_m(), target);
  }

  // float orientation_rad = 5;
  if (this->orientation_rad() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->orientation_rad(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:moonranger_rover.Goal)
  return target;
}

size_t Goal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:moonranger_rover.Goal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x_coordinate_m = 1;
  if (this->x_coordinate_m() != 0) {
    total_size += 1 + 4;
  }

  // float y_coordinate_m = 2;
  if (this->y_coordinate_m() != 0) {
    total_size += 1 + 4;
  }

  // float x_rad_m = 3;
  if (this->x_rad_m() != 0) {
    total_size += 1 + 4;
  }

  // float y_rad_m = 4;
  if (this->y_rad_m() != 0) {
    total_size += 1 + 4;
  }

  // float orientation_rad = 5;
  if (this->orientation_rad() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Goal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:moonranger_rover.Goal)
  GOOGLE_DCHECK_NE(&from, this);
  const Goal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Goal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:moonranger_rover.Goal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:moonranger_rover.Goal)
    MergeFrom(*source);
  }
}

void Goal::MergeFrom(const Goal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:moonranger_rover.Goal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x_coordinate_m() != 0) {
    set_x_coordinate_m(from.x_coordinate_m());
  }
  if (from.y_coordinate_m() != 0) {
    set_y_coordinate_m(from.y_coordinate_m());
  }
  if (from.x_rad_m() != 0) {
    set_x_rad_m(from.x_rad_m());
  }
  if (from.y_rad_m() != 0) {
    set_y_rad_m(from.y_rad_m());
  }
  if (from.orientation_rad() != 0) {
    set_orientation_rad(from.orientation_rad());
  }
}

void Goal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:moonranger_rover.Goal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Goal::CopyFrom(const Goal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:moonranger_rover.Goal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Goal::IsInitialized() const {
  return true;
}

void Goal::Swap(Goal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Goal::InternalSwap(Goal* other) {
  using std::swap;
  swap(x_coordinate_m_, other->x_coordinate_m_);
  swap(y_coordinate_m_, other->y_coordinate_m_);
  swap(x_rad_m_, other->x_rad_m_);
  swap(y_rad_m_, other->y_rad_m_);
  swap(orientation_rad_, other->orientation_rad_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Goal::GetMetadata() const {
  protobuf_moonranger_5frover_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_moonranger_5frover_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TranslationPose::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TranslationPose::kXMFieldNumber;
const int TranslationPose::kYMFieldNumber;
const int TranslationPose::kZMFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TranslationPose::TranslationPose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_moonranger_5frover_2eproto::scc_info_TranslationPose.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:moonranger_rover.TranslationPose)
}
TranslationPose::TranslationPose(const TranslationPose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_m_, &from.x_m_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_m_) -
    reinterpret_cast<char*>(&x_m_)) + sizeof(z_m_));
  // @@protoc_insertion_point(copy_constructor:moonranger_rover.TranslationPose)
}

void TranslationPose::SharedCtor() {
  ::memset(&x_m_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_m_) -
      reinterpret_cast<char*>(&x_m_)) + sizeof(z_m_));
}

TranslationPose::~TranslationPose() {
  // @@protoc_insertion_point(destructor:moonranger_rover.TranslationPose)
  SharedDtor();
}

void TranslationPose::SharedDtor() {
}

void TranslationPose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TranslationPose::descriptor() {
  ::protobuf_moonranger_5frover_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_moonranger_5frover_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TranslationPose& TranslationPose::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_moonranger_5frover_2eproto::scc_info_TranslationPose.base);
  return *internal_default_instance();
}


void TranslationPose::Clear() {
// @@protoc_insertion_point(message_clear_start:moonranger_rover.TranslationPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_m_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_m_) -
      reinterpret_cast<char*>(&x_m_)) + sizeof(z_m_));
  _internal_metadata_.Clear();
}

bool TranslationPose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:moonranger_rover.TranslationPose)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x_m = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y_m = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z_m = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:moonranger_rover.TranslationPose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:moonranger_rover.TranslationPose)
  return false;
#undef DO_
}

void TranslationPose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:moonranger_rover.TranslationPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x_m = 1;
  if (this->x_m() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x_m(), output);
  }

  // float y_m = 2;
  if (this->y_m() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y_m(), output);
  }

  // float z_m = 3;
  if (this->z_m() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z_m(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:moonranger_rover.TranslationPose)
}

::google::protobuf::uint8* TranslationPose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:moonranger_rover.TranslationPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x_m = 1;
  if (this->x_m() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x_m(), target);
  }

  // float y_m = 2;
  if (this->y_m() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y_m(), target);
  }

  // float z_m = 3;
  if (this->z_m() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z_m(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:moonranger_rover.TranslationPose)
  return target;
}

size_t TranslationPose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:moonranger_rover.TranslationPose)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x_m = 1;
  if (this->x_m() != 0) {
    total_size += 1 + 4;
  }

  // float y_m = 2;
  if (this->y_m() != 0) {
    total_size += 1 + 4;
  }

  // float z_m = 3;
  if (this->z_m() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TranslationPose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:moonranger_rover.TranslationPose)
  GOOGLE_DCHECK_NE(&from, this);
  const TranslationPose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TranslationPose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:moonranger_rover.TranslationPose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:moonranger_rover.TranslationPose)
    MergeFrom(*source);
  }
}

void TranslationPose::MergeFrom(const TranslationPose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:moonranger_rover.TranslationPose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x_m() != 0) {
    set_x_m(from.x_m());
  }
  if (from.y_m() != 0) {
    set_y_m(from.y_m());
  }
  if (from.z_m() != 0) {
    set_z_m(from.z_m());
  }
}

void TranslationPose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:moonranger_rover.TranslationPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TranslationPose::CopyFrom(const TranslationPose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:moonranger_rover.TranslationPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranslationPose::IsInitialized() const {
  return true;
}

void TranslationPose::Swap(TranslationPose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TranslationPose::InternalSwap(TranslationPose* other) {
  using std::swap;
  swap(x_m_, other->x_m_);
  swap(y_m_, other->y_m_);
  swap(z_m_, other->z_m_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TranslationPose::GetMetadata() const {
  protobuf_moonranger_5frover_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_moonranger_5frover_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RotationPose::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RotationPose::kXQuatFieldNumber;
const int RotationPose::kYQuatFieldNumber;
const int RotationPose::kZQuatFieldNumber;
const int RotationPose::kWQuatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RotationPose::RotationPose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_moonranger_5frover_2eproto::scc_info_RotationPose.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:moonranger_rover.RotationPose)
}
RotationPose::RotationPose(const RotationPose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_quat_, &from.x_quat_,
    static_cast<size_t>(reinterpret_cast<char*>(&w_quat_) -
    reinterpret_cast<char*>(&x_quat_)) + sizeof(w_quat_));
  // @@protoc_insertion_point(copy_constructor:moonranger_rover.RotationPose)
}

void RotationPose::SharedCtor() {
  ::memset(&x_quat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_quat_) -
      reinterpret_cast<char*>(&x_quat_)) + sizeof(w_quat_));
}

RotationPose::~RotationPose() {
  // @@protoc_insertion_point(destructor:moonranger_rover.RotationPose)
  SharedDtor();
}

void RotationPose::SharedDtor() {
}

void RotationPose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RotationPose::descriptor() {
  ::protobuf_moonranger_5frover_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_moonranger_5frover_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RotationPose& RotationPose::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_moonranger_5frover_2eproto::scc_info_RotationPose.base);
  return *internal_default_instance();
}


void RotationPose::Clear() {
// @@protoc_insertion_point(message_clear_start:moonranger_rover.RotationPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_quat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_quat_) -
      reinterpret_cast<char*>(&x_quat_)) + sizeof(w_quat_));
  _internal_metadata_.Clear();
}

bool RotationPose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:moonranger_rover.RotationPose)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x_quat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_quat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y_quat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_quat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z_quat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_quat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float w_quat = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &w_quat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:moonranger_rover.RotationPose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:moonranger_rover.RotationPose)
  return false;
#undef DO_
}

void RotationPose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:moonranger_rover.RotationPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x_quat = 1;
  if (this->x_quat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x_quat(), output);
  }

  // float y_quat = 2;
  if (this->y_quat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y_quat(), output);
  }

  // float z_quat = 3;
  if (this->z_quat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z_quat(), output);
  }

  // float w_quat = 4;
  if (this->w_quat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->w_quat(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:moonranger_rover.RotationPose)
}

::google::protobuf::uint8* RotationPose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:moonranger_rover.RotationPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x_quat = 1;
  if (this->x_quat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x_quat(), target);
  }

  // float y_quat = 2;
  if (this->y_quat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y_quat(), target);
  }

  // float z_quat = 3;
  if (this->z_quat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z_quat(), target);
  }

  // float w_quat = 4;
  if (this->w_quat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->w_quat(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:moonranger_rover.RotationPose)
  return target;
}

size_t RotationPose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:moonranger_rover.RotationPose)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x_quat = 1;
  if (this->x_quat() != 0) {
    total_size += 1 + 4;
  }

  // float y_quat = 2;
  if (this->y_quat() != 0) {
    total_size += 1 + 4;
  }

  // float z_quat = 3;
  if (this->z_quat() != 0) {
    total_size += 1 + 4;
  }

  // float w_quat = 4;
  if (this->w_quat() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RotationPose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:moonranger_rover.RotationPose)
  GOOGLE_DCHECK_NE(&from, this);
  const RotationPose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RotationPose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:moonranger_rover.RotationPose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:moonranger_rover.RotationPose)
    MergeFrom(*source);
  }
}

void RotationPose::MergeFrom(const RotationPose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:moonranger_rover.RotationPose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x_quat() != 0) {
    set_x_quat(from.x_quat());
  }
  if (from.y_quat() != 0) {
    set_y_quat(from.y_quat());
  }
  if (from.z_quat() != 0) {
    set_z_quat(from.z_quat());
  }
  if (from.w_quat() != 0) {
    set_w_quat(from.w_quat());
  }
}

void RotationPose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:moonranger_rover.RotationPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RotationPose::CopyFrom(const RotationPose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:moonranger_rover.RotationPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RotationPose::IsInitialized() const {
  return true;
}

void RotationPose::Swap(RotationPose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RotationPose::InternalSwap(RotationPose* other) {
  using std::swap;
  swap(x_quat_, other->x_quat_);
  swap(y_quat_, other->y_quat_);
  swap(z_quat_, other->z_quat_);
  swap(w_quat_, other->w_quat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RotationPose::GetMetadata() const {
  protobuf_moonranger_5frover_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_moonranger_5frover_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pose::InitAsDefaultInstance() {
  ::moonranger_rover::_Pose_default_instance_._instance.get_mutable()->translation_ = const_cast< ::moonranger_rover::TranslationPose*>(
      ::moonranger_rover::TranslationPose::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pose::kTimestampNsFieldNumber;
const int Pose::kTranslationFieldNumber;
const int Pose::kXQuatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pose::Pose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_moonranger_5frover_2eproto::scc_info_Pose.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:moonranger_rover.Pose)
}
Pose::Pose(const Pose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_translation()) {
    translation_ = new ::moonranger_rover::TranslationPose(*from.translation_);
  } else {
    translation_ = NULL;
  }
  ::memcpy(&timestamp_ns_, &from.timestamp_ns_,
    static_cast<size_t>(reinterpret_cast<char*>(&x_quat_) -
    reinterpret_cast<char*>(&timestamp_ns_)) + sizeof(x_quat_));
  // @@protoc_insertion_point(copy_constructor:moonranger_rover.Pose)
}

void Pose::SharedCtor() {
  ::memset(&translation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&x_quat_) -
      reinterpret_cast<char*>(&translation_)) + sizeof(x_quat_));
}

Pose::~Pose() {
  // @@protoc_insertion_point(destructor:moonranger_rover.Pose)
  SharedDtor();
}

void Pose::SharedDtor() {
  if (this != internal_default_instance()) delete translation_;
}

void Pose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Pose::descriptor() {
  ::protobuf_moonranger_5frover_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_moonranger_5frover_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pose& Pose::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_moonranger_5frover_2eproto::scc_info_Pose.base);
  return *internal_default_instance();
}


void Pose::Clear() {
// @@protoc_insertion_point(message_clear_start:moonranger_rover.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && translation_ != NULL) {
    delete translation_;
  }
  translation_ = NULL;
  ::memset(&timestamp_ns_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&x_quat_) -
      reinterpret_cast<char*>(&timestamp_ns_)) + sizeof(x_quat_));
  _internal_metadata_.Clear();
}

bool Pose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:moonranger_rover.Pose)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 timestamp_ns = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_ns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .moonranger_rover.TranslationPose translation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_translation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x_quat = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_quat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:moonranger_rover.Pose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:moonranger_rover.Pose)
  return false;
#undef DO_
}

void Pose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:moonranger_rover.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 timestamp_ns = 1;
  if (this->timestamp_ns() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp_ns(), output);
  }

  // .moonranger_rover.TranslationPose translation = 2;
  if (this->has_translation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_translation(), output);
  }

  // float x_quat = 5;
  if (this->x_quat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->x_quat(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:moonranger_rover.Pose)
}

::google::protobuf::uint8* Pose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:moonranger_rover.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 timestamp_ns = 1;
  if (this->timestamp_ns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timestamp_ns(), target);
  }

  // .moonranger_rover.TranslationPose translation = 2;
  if (this->has_translation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_translation(), deterministic, target);
  }

  // float x_quat = 5;
  if (this->x_quat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->x_quat(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:moonranger_rover.Pose)
  return target;
}

size_t Pose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:moonranger_rover.Pose)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .moonranger_rover.TranslationPose translation = 2;
  if (this->has_translation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *translation_);
  }

  // uint64 timestamp_ns = 1;
  if (this->timestamp_ns() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp_ns());
  }

  // float x_quat = 5;
  if (this->x_quat() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:moonranger_rover.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  const Pose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:moonranger_rover.Pose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:moonranger_rover.Pose)
    MergeFrom(*source);
  }
}

void Pose::MergeFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:moonranger_rover.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_translation()) {
    mutable_translation()->::moonranger_rover::TranslationPose::MergeFrom(from.translation());
  }
  if (from.timestamp_ns() != 0) {
    set_timestamp_ns(from.timestamp_ns());
  }
  if (from.x_quat() != 0) {
    set_x_quat(from.x_quat());
  }
}

void Pose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:moonranger_rover.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pose::CopyFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:moonranger_rover.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pose::IsInitialized() const {
  return true;
}

void Pose::Swap(Pose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pose::InternalSwap(Pose* other) {
  using std::swap;
  swap(translation_, other->translation_);
  swap(timestamp_ns_, other->timestamp_ns_);
  swap(x_quat_, other->x_quat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pose::GetMetadata() const {
  protobuf_moonranger_5frover_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_moonranger_5frover_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace moonranger_rover
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::moonranger_rover::Goal* Arena::CreateMaybeMessage< ::moonranger_rover::Goal >(Arena* arena) {
  return Arena::CreateInternal< ::moonranger_rover::Goal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::moonranger_rover::TranslationPose* Arena::CreateMaybeMessage< ::moonranger_rover::TranslationPose >(Arena* arena) {
  return Arena::CreateInternal< ::moonranger_rover::TranslationPose >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::moonranger_rover::RotationPose* Arena::CreateMaybeMessage< ::moonranger_rover::RotationPose >(Arena* arena) {
  return Arena::CreateInternal< ::moonranger_rover::RotationPose >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::moonranger_rover::Pose* Arena::CreateMaybeMessage< ::moonranger_rover::Pose >(Arena* arena) {
  return Arena::CreateInternal< ::moonranger_rover::Pose >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
